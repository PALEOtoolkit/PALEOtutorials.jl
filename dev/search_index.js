var documenterSearchIndex = {"docs":
[{"location":"indexpage/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"indexpage/","page":"Index","title":"Index","text":"","category":"page"},{"location":"ExampleErrors/#Configuration-Errors","page":"Configuration Errors","title":"Configuration Errors","text":"","category":"section"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"These examples illustrate common configuration errors, for various misconfigurations of Example 5 Isotopes and Rayleigh fractionation","category":"page"},{"location":"ExampleErrors/#Missing-/-unlinked-Variables","page":"Configuration Errors","title":"Missing / unlinked Variables","text":"","category":"section"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"The model configuration (file examples/error_examples/config_ex5_reservoir_A_missing.yaml) omits a ReactionReservoirScalar, resulting in Variable Dependencies and Contributors with no corresponding Properties and Targets.","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"str = read(\"../../examples/error_examples/config_ex5_reservoir_A_missing.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"This results in an error when the Variables are linked:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"try # hide\n      include(\"../../examples/error_examples/run_ex5_reservoir_A_missing.jl\")\ncatch # hide\n      rethrow() # hide\nend # hide","category":"page"},{"location":"ExampleErrors/#A-duplicated-Variable-or-a-name-collision","page":"Configuration Errors","title":"A duplicated Variable or a name collision","text":"","category":"section"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"The model configuration (file examples/error_examples/config_ex5_reservoir_A_duplicate.yaml) contains two copies of a ReactionReservoirScalar, both attempting to create the same VariableDomains","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"str = read(\"../../examples/error_examples/config_ex5_reservoir_A_duplicate.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"This results in an error when the Variables are linked:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"try # hide\n      include(\"../../examples/error_examples/run_ex5_reservoir_A_duplicate.jl\")\ncatch # hide\n      rethrow() # hide\nend # hide","category":"page"},{"location":"ExampleErrors/#Mismatch-in-:field_data-Type-(eg-isotopes)-(Reservoir)","page":"Configuration Errors","title":"Mismatch in :field_data Type (eg isotopes) (Reservoir)","text":"","category":"section"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"The model configuration (file examples/error_examples/config_ex5_reservoir_A_noisotope.yaml)  contains one ReactionReservoirScalar with :field_data=ScalarData where this species should have  :field_data=IsotopeLinear:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"str = read(\"../../examples/error_examples/config_ex5_reservoir_A_noisotope.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"This results in an error when the Variables are linked:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"try # hide\n      include(\"../../examples/error_examples/run_ex5_reservoir_A_noisotope.jl\")\ncatch # hide\n      rethrow() # hide\nend # hide","category":"page"},{"location":"ExampleErrors/#Mismatch-in-:field_data-Type-(eg-isotopes)-(Flux)","page":"Configuration Errors","title":"Mismatch in :field_data Type (eg isotopes) (Flux)","text":"","category":"section"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"The model configuration (file examples/error_examples/config_ex5_flux_noisotope.yaml)  contains a Variable defined by a ReactionFluxTarget with default :field_data=ScalarData where this species should have  :field_data=IsotopeLinear:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"str = read(\"../../examples/error_examples/config_ex5_flux_noisotope.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"This results in an error when the Variables are linked:","category":"page"},{"location":"ExampleErrors/","page":"Configuration Errors","title":"Configuration Errors","text":"try # hide\n      include(\"../../examples/error_examples/run_ex5_flux_noisotope.jl\")\ncatch # hide\n      rethrow() # hide\nend # hide","category":"page"},{"location":"ExampleInstallConfig/#Installation-and-initial-configuration","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"","category":"section"},{"location":"ExampleInstallConfig/#Installing-and-configuring-Julia-and-VS-Code","page":"Installation and initial configuration","title":"Installing and configuring Julia and VS Code","text":"","category":"section"},{"location":"ExampleInstallConfig/#Julia","page":"Installation and initial configuration","title":"Julia","text":"","category":"section"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"Download and install Julia from https://julialang.org/downloads/ (PALEO requires Julia 1.6 or a later version).","category":"page"},{"location":"ExampleInstallConfig/#VS-Code","page":"Installation and initial configuration","title":"VS Code","text":"","category":"section"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"Install VS Code from https://code.visualstudio.com/download Follow instructions at https://github.com/julia-vscode/julia-vscode to install the Julia extension.","category":"page"},{"location":"ExampleInstallConfig/#Installing-and-configuring-the-PALEOtutorials","page":"Installation and initial configuration","title":"Installing and configuring the PALEOtutorials","text":"","category":"section"},{"location":"ExampleInstallConfig/#Clone-github-repository","page":"Installation and initial configuration","title":"Clone github repository","text":"","category":"section"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"This will download https://github.com/sjdaines/PALEOtutorials.jl into a new folder PALEOtutorials","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"git clone https://github.com/PALEOtoolkit/PALEOtutorials.jl PALEOtutorials","category":"page"},{"location":"ExampleInstallConfig/#Start-a-Julia-REPL-in-VS-code","page":"Installation and initial configuration","title":"Start a Julia REPL in VS code","text":"","category":"section"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"Launch VScode from the PALEOtutorials folder, or use Menu->File->Open folder from inside VSCode to change to this folder.","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"Start Julia REPL: VScode menu View -> Command Palette, search for Julia, select Julia: Start REPL ","category":"page"},{"location":"ExampleInstallConfig/#Activate-the-Julia-environment-and-install-packages","page":"Installation and initial configuration","title":"Activate the Julia environment and install packages","text":"","category":"section"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"The majority of high-level Julia functionality (numerical solvers, plotting, etc) is provided by Packages. Julia uses environments defined to a Project.toml file to control the loading of Packages, which implement Modules loaded by import or using (eg import DifferentialEquations to use the DifferentialEquations package). Packages can be registered with the Julia repository to make them generally available for download.","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"The recommended environment for using PALEOtutorials.jl is defined by PALEOtutorials\\examples\\Project.toml. This adds the PALEOboxes, PALEOmodel and PALEOcopse packages.","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"To activate the correct Julia environment, either:","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"In VS code, right click on a file in the PALEOtutorials\\examples folder and activate parent environment.\nOr from the Julia REPL (command line), use the package manager (called Pkg, https://julialang.github.io/Pkg.jl/v1.1/getting-started/):\n  julia> cd(\"PALEOtutorials/examples\")\n  julia> import Pkg\n  julia> Pkg.activate(\".\")","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"Then download packages, from the Julia REPL:","category":"page"},{"location":"ExampleInstallConfig/","page":"Installation and initial configuration","title":"Installation and initial configuration","text":"julia> Pkg.instantiate()  # one-time initialisation for a new installation","category":"page"},{"location":"ExampleCPU/#CPU-(Carbon,-Phosphorus,-Uranium)-model","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"","category":"section"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"These examples demonstrate the CPU model (Matthew O. Clarkson, Claudine H. Stirling, Hugh C. Jenkyns, Alexander J. Dickson, Don Porcelli, Christopher M. Moy, Philip A. E. Pogge von Strandmann, Ilsa R. Cooke, Timothy M. Lenton (2018)) using a minimal single-box implementation in PALEO with parameter values from (Feifei Zhang, Timothy M Lenton, {Á}lvaro del Rey, Stephen J. Romaniello, Xinming Chen, Noah J. Planavsky, Matthew O. Clarkson, Tais W. Dahl, Kimberly V. Lau, Wenqian Wang, Ziheng Li, Mingyu Zhao, Terry Isson, Thomas J. Algeo, Ariel D. Anbar (2020)).","category":"page"},{"location":"ExampleCPU/#Setting-the-Julia-environment-and-working-directory","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"Setting the Julia environment and working directory","text":"","category":"section"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"Change the Julia REPL working directory to the PALEOtutorials/examples/CPU folder:","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"In VS code, right click on this folder in the file browser and select Julia: Change to This Directory. Or from the REPL, use the cd command):","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"julia> cd(\"PALEOtutorials/examples/CPU\")","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"If it is not already active, activate the Julia environment PALEOtutorials/examples:","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"In VS code, right click on PALEOtutorials/examples or any subfolder in the file browser and select Julia: Activate Parent Environment. Or from the REPL, use ] to enter package management:","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"julia> pwd()\n\"/home/sd336/software/julia/PALEOtutorials/examples/CPU\"\njulia> ] \n(@v1.7) pkg> activate ../\n  Activating project at `/home/sd336/software/julia/PALEOtutorials/examples`","category":"page"},{"location":"ExampleCPU/#To-run-the-CPU-example-with-a-default-3e18-mol-C-perturbation","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"To run the CPU example with a default 3e18 mol C perturbation","text":"","category":"section"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"julia> include(\"CPU.jl\")","category":"page"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"This will run and plot output (NB: the first run will be slow as Julia JIT compiles the code).","category":"page"},{"location":"ExampleCPU/#To-display-model-Parameters,-Variables,-and-output.","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"To display model Parameters, Variables, and output.","text":"","category":"section"},{"location":"ExampleCPU/","page":"CPU (Carbon, Phosphorus, Uranium) model","title":"CPU (Carbon, Phosphorus, Uranium) model","text":"See PALEOmodel documentation","category":"page"},{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"HOWTOminimalGit/#Minimal-git-workflow-for-scientific-collaboration-and-reproducibility","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"There are many online resources for git (see eg https://git-scm.com/doc).","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"This HOWTO illustrates a minimal git workflow, sufficient to enable scientific collaboration:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"install git\nfigure out github authentication\nclone PALEO repository\nchoose an existing branch to contribute to, or to use as a starting point with a new branch for your work\nmake changes and commit\npush the new branch to the PALEO repository\nfetch and merge changes made by a collaborator","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"This is already enough to enable collaboration by sharing model configurations and updates, and to archive configurations etc on github to provide reproducibility.","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"The key step here is to create a new branch: provided you do this, your changes won't interfere with anyone elses, and can be shared to github.","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"Much of the complexity of using git is dealing with what happens next in a software development context: how to merge and combine changes back into a single codebase. But this isn't essential for scientific collaboration. If needed, the next step is:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"8.  Create a pull request on github.com to propose and collaborate on making changes to the core PALEO code.","category":"page"},{"location":"HOWTOminimalGit/#Install-git","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Install git","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"Download from https://git-scm.com/downloads","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"This HOWTO uses a minimum installation of the command line git tools. Other tools are available, including GUIs. Git is also built-in to VS Code.","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To get basic help for the command line tools:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git help","category":"page"},{"location":"HOWTOminimalGit/#Github-authentication","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Github authentication","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"There are (since ~mid 2021) now two steps needed:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"github.com website uses username/password\ncode access requires a 'Personal Access Token' (PAT) https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token NB: not all git tools are updated to reflect this, and will prompt for 'password' where what they need is 'PAT'.","category":"page"},{"location":"HOWTOminimalGit/#Clone-github-repository","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Clone github repository","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To download https://github.com/PALEOtoolkit/PALEOdev.jl into a new folder PALEOjulia:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git clone https://github.com/PALEOtoolkit/PALEOdev.jl PALEOjulia","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"See above for PAT, not password. ","category":"page"},{"location":"HOWTOminimalGit/#Create-branch","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Create branch","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"Change directory to 'PALEOjulia', then:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To show the current branch ('master'):","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git status","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To show all branches in the repository:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git branch -a","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"or to just show existing local branches:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git branch","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To create a local branch corresponding to an existing branch on github (synchronized via a 'remote tracking branch'):","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git checkout -b <existing branch> --track origin/<existing branch>","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"(this is needed eg if you clone the github.com repository to a new folder, and then want to contribute to or start from an existing branch)","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To change to an existing local branch:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git checkout <existing branch>","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To create a new branch for your work (branching from the current branch), and then check it out:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git branch <my new branch>\ngit checkout <my new branch>","category":"page"},{"location":"HOWTOminimalGit/#Commit-changes","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Commit changes","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To add modified or new files:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git add <modified and new files>","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To check everything added:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git status","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To commit changes:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git commit -m \"add a useful summary of changes here\"","category":"page"},{"location":"HOWTOminimalGit/#Push-changes-to-github","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Push changes to github","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To push changes in the current branch to github:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git push","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"if you then go to https://github.com/PALEOtoolkit/PALEOdev.jl you should see that your branch is there.","category":"page"},{"location":"HOWTOminimalGit/#Fetch-and-merge-changes-made-by-a-collaborator","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Fetch and merge changes made by a collaborator","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"To fetch from github and merge changes made by a collaborator in your branch:","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"git pull","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"note this combines two lower-level git operations: git fetch to fetch changes from github into a local remote-tracking branch, and  git merge to merge those changes into the current branch.","category":"page"},{"location":"HOWTOminimalGit/#Optional:-create-a-pull-request-on-github","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Optional: create a pull request on github","text":"","category":"section"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"See the github.com docs for Creating a pull request.","category":"page"},{"location":"HOWTOminimalGit/","page":"Minimal git workflow for scientific collaboration and reproducibility","title":"Minimal git workflow for scientific collaboration and reproducibility","text":"This makes it straightforward to propose and collaborate on making changes to the core PALEO code.","category":"page"},{"location":"HOWTOadditionalconfig/#Optional-additional-configuration","page":"Optional additional configuration","title":"Optional additional configuration","text":"","category":"section"},{"location":"HOWTOadditionalconfig/#Local-paths-in-LocalPreferences.toml","page":"Optional additional configuration","title":"Local paths in LocalPreferences.toml","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"PALEO uses Julia Preferences.jl to simplify configuration for data files that are not part of the PALEO repo hence may be in a different location on the local machine.","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Any Parameter value string in $ $ eg $SomePath$ will be substituted with the value of the key SomePath read from the LocalPreferences.toml file in the top-level folder for the current environment (eg PALEOexamples/LocalPreferences.toml).","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Currently this mechanism is used to define paths for external data files for ocean transport, via the keys S2P3TransportDir, GENIETransportDir, TMMDir.","category":"page"},{"location":"HOWTOadditionalconfig/#Jupyter-notebooks","page":"Optional additional configuration","title":"Jupyter notebooks","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"The Julia language (like Python and R, unlike Matlab) can use multiple different development workflows, including the Jupyter environment and notebooks via the IJulia package (this is the 'Ju' in Jupyter https://blog.jupyter.org/i-python-you-r-we-julia-baf064ca1fb6).","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Using Jupyter notebooks does however introduce a dependency on Python. The most reliable way to get this working is to ask IJulia to install its own Conda-based version of Python and Jupyter (see https://julialang.github.io/IJulia.jl/stable/):","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"julia> using Pkg   # the Julia package manager\njulia> pwd()    # check we are in the top-level PALEO.jl folder\n\"E:\\\\software\\\\julia\\\\PALEOjulia\"       \njulia> Pkg.activate(\"PALEOexamples\")  # activate the PALEOexamples environment\njulia> ENV[\"JUPYTER\"]=\"\"; Pkg.build(\"IJulia\")  # force IJulia to use its own Conda-based Jupyter version\njulia> using IJulia  \njulia> notebook(dir=pwd(), detached=true)  # Prompt to install Jupyter, launch an IJulia notebook in your browser","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"See Configuring for Julia - python interoperability for setup details including how to use an external Python installation.","category":"page"},{"location":"HOWTOadditionalconfig/#Plotting","page":"Optional additional configuration","title":"Plotting","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Julia has multiple plot backends, and these can either use a standalone window or display \"inline\" to the VS code plot panel (or Jupyter notebook).","category":"page"},{"location":"HOWTOadditionalconfig/#VS-code-plot-panel","page":"Optional additional configuration","title":"VS code plot panel","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Enable/disable the VS code plot panel with the Julia: Use plot panel checkbox in VS code settings (search for Julia). If disabled, plotting will use a standalone window.","category":"page"},{"location":"HOWTOadditionalconfig/#GR-backend","page":"Optional additional configuration","title":"GR backend","text":"","category":"section"},{"location":"HOWTOadditionalconfig/#VS-code","page":"Optional additional configuration","title":"VS code","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Enlarging VS plot window using default GR backend: julia> using Plots; gr(size = (750, 565))","category":"page"},{"location":"HOWTOadditionalconfig/#Standalone","page":"Optional additional configuration","title":"Standalone","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"The standalone GR plot window (if not using VS code plot panel) can only display one plot in one window, so not recommended.","category":"page"},{"location":"HOWTOadditionalconfig/#PlotlyJS-backend","page":"Optional additional configuration","title":"PlotlyJS backend","text":"","category":"section"},{"location":"HOWTOadditionalconfig/#VS-code-2","page":"Optional additional configuration","title":"VS code","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Using PlotlyJS backend in VS code: julia> using Plots; plotlyjs(size=(750, 565)). ","category":"page"},{"location":"HOWTOadditionalconfig/#Standalone-2","page":"Optional additional configuration","title":"Standalone","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"See https://github.com/JuliaPlots/PlotlyJS.jl for note on Blink install.","category":"page"},{"location":"HOWTOadditionalconfig/#Pyplot-backend","page":"Optional additional configuration","title":"Pyplot backend","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"This requires the Python Matplotlib library, see https://github.com/JuliaPy/PyPlot.jl for installation instructions. The simplest configuration is for Julia to install a private (not system provided) Python distribution.  On linux, this requires that you set ENV[\"PYTHON\"]=\"\" before adding PyPlot:","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"julia> ENV[\"PYTHON\"]=\"\" \njulia> Pkg.add(\"PyPlot\")  # will automatically install python Matplotlib etc as needed and the Qt backend","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"or if PyPlot is already installed but failing with a system Python,","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"julia> ENV[\"PYTHON\"]=\"\" \njulia> Pkg.build(\"PyCall\")  # will rebuild to use private Python install, and install Matplotlib next time PyPlot is imported.","category":"page"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"See Configuring for Julia - python interoperability for setup details including how to use an external Python installation.","category":"page"},{"location":"HOWTOadditionalconfig/#VS-code-3","page":"Optional additional configuration","title":"VS code","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"Using pyplot backend in VS code: julia> using Plots; pyplot()","category":"page"},{"location":"HOWTOadditionalconfig/#Standalone-3","page":"Optional additional configuration","title":"Standalone","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"On linux, install process above will use the Qt backend by default, see https://github.com/JuliaPy/PyPlot.jl for instructions for MacOS.","category":"page"},{"location":"HOWTOadditionalconfig/#SIMD-vectorized-math-functions","page":"Optional additional configuration","title":"SIMD vectorized math functions","text":"","category":"section"},{"location":"HOWTOadditionalconfig/","page":"Optional additional configuration","title":"Optional additional configuration","text":"By default, Julia (as of version 1.6) will fall back to slow scalar functions for SIMD exp, log etc, which has a big (x2) impact on the speed of carbonate chemistry and hence run time for large (GENIE size) models that use many small fixed timesteps. As a workaround, PALEO will use the sleef library (https://sleef.org) for fast vectorized versions, supplied by the SLEEF_jll.jl package.  This can be disabled by setting USE_SLEEF = false in LocalPreferences.toml and restarting the Julia REPL.","category":"page"},{"location":"HOWTOJuliaUsage/#Julia-usage","page":"Julia usage","title":"Julia usage","text":"","category":"section"},{"location":"HOWTOJuliaUsage/#Julia-resources","page":"Julia usage","title":"Julia resources","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"Julia manual https://docs.julialang.org/en/v1\nThink Julia book (an introduction to programming) https://benlauwens.github.io/ThinkJulia.jl/latest/book.html\nJulia cheatsheet: https://juliadocs.github.io/Julia-Cheat-Sheet\nMatlab-Python-Julia cheatsheet: https://cheatsheets.quantecon.org (NB: the first example on Creating Vectors is misleading - use 1d Arrays in Julia!)","category":"page"},{"location":"HOWTOJuliaUsage/#Always-use-Revise.jl","page":"Julia usage","title":"Always use Revise.jl","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"This tracks changes and automatically updates code run from a REPL session.","category":"page"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"julia> using Revise","category":"page"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"VS code has an option to automatically load Revise.jl at startup (enabled by default).","category":"page"},{"location":"HOWTOJuliaUsage/#Use-Infiltrator.jl-for-debugging","page":"Julia usage","title":"Use Infiltrator.jl for debugging","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"https://github.com/JuliaDebug/Infiltrator.jl","category":"page"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"The Debugger.jl built in to VSCode is an interpreter (Interpreter.jl), and is unusably slow for PALEO.","category":"page"},{"location":"HOWTOJuliaUsage/#Julia-best-practices","page":"Julia usage","title":"Julia best practices","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"Performance tips: https://docs.julialang.org/en/v1/manual/performance-tips/\nJulia antipatterns: https://www.oxinabox.net/2020/04/19/Julia-Antipatterns.html\nBatch usage: https://github.com/CliMA/ClimateMachine.jl/wiki/Caltech-Central-Cluster","category":"page"},{"location":"HOWTOJuliaUsage/#Julia-bugs/gotchas","page":"Julia usage","title":"Julia bugs/gotchas","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"YAML.jl parser allows duplicate keys (later key overwrites earlier) TODO report. This is easy to hit when generating model configurations. Workaround: check the .yaml file using an online validator eg http://www.yamllint.com/.\nContinuation lines in multi-line formulas can silently fail (this is easy to hit when copying across Fortran code). Workaround - add brackets.\nDebug in VSCode is very slow. Use Infiltrator.jl instead.\nLegends on subplots are merged with some backends eg plotlyjs (https://github.com/JuliaPlots/Plots.jl/issues/673). Workaround - use a different backend for multiple-panel plots.\njldoctest fails if there is an initial blank line (apparent off-by-one in input and validation output). TODO report.","category":"page"},{"location":"HOWTOJuliaUsage/#Julia-performance-issues/gotchas","page":"Julia usage","title":"Julia performance issues/gotchas","text":"","category":"section"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"NB: the only place this matters in PALEO is for the model main loop.  Everything else is non-performance critical.","category":"page"},{"location":"HOWTOJuliaUsage/","page":"Julia usage","title":"Julia usage","text":"It is easy to write code which is 'type unstable', or generates memory allocations, which then gives low performance, see 'Performance tips' above.\nIterating over tuples: really need a foreach that is optimised eg https://github.com/JuliaLang/julia/issues/31869, https://discourse.julialang.org/t/manually-unroll-operations-with-objects-of-tuple/11604. PALEO provides PALEOboxes.foreach_longtuple.\n@views for sparse matrices reverts to slow (dense) pathways (https://stackoverflow.com/questions/58699267/julia-view-of-sparse-matrix, https://github.com/JuliaLang/julia/issues/21796) (update - much improved in Julia 1.6 according to updates to these posts)\nSIMD.jl is missing optimized vectorized intrinsics (exp, log etc). PALEO provides workaround ins PALEOboxes.SIMDutils.jl, implemented using SLEEF.","category":"page"},{"location":"HOWTOPython/#Configuring-for-Julia-python-interoperability","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"","category":"section"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"Julia has near-seamless interoperability with Python, provided by the PyCall.jl and Conda.jl packages in the JuliaPy github organisation.","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"However configuration of Python and Julia inevitably introduces dependencies.  There are two overall strategies:","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"allow Julia to install and maintain a private Python installion (the default)\nconfigure Julia and Python for a shared Python installation","category":"page"},{"location":"HOWTOPython/#.-Private-Python-installation-for-Julia","page":"Configuring for Julia - python interoperability","title":"1. Private Python installation for Julia","text":"","category":"section"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"This is simplest for cases where you just want to use a few python packages from Julia (eg IJulia for Jupyter notebooks).","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"PYTHON\"]=\"\" \njulia> Pkg.add(\"PyCall\")  # will build automatically","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"Rebuild PyCall after installation to use private python installation:","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"PYTHON\"]=\"\" \njulia> Pkg.build(\"PyCall\")  # will rebuild to use private Python install, and install Matplotlib next time PyPlot is imported.","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"(Re)build Julia packages that depend on python:","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"JUPYTER\"]=\"\";\njulia> Pkg.build(\"IJulia\")  # force IJulia to use its own Conda-based Jupyter version","category":"page"},{"location":"HOWTOPython/#.-Use-an-external-python-installation","page":"Configuring for Julia - python interoperability","title":"2. Use an external python installation","text":"","category":"section"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"As of 2021-12-06, the simplest way to do this is to use miniforge to manage the python installation.","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"(Re)build Conda.jl to use the pre-existing Conda installation: ","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"CONDA_JL_HOME\"] = \"/home/sd336/miniforge3/envs/conda_jl38\"  # path from unix> conda info --envs\npkg> build Conda","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"(Re)build PyCall.jl","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"PYTHON\"] = \"/home/sd336/miniforge3/envs/conda_jl38/bin/python\"  # may be redundant (picks up location from Conda.jl ?)\npkg> build PyCall","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"Restart Julia","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> PyCall.libpython  # check we have picked up the new libpython etc\n\"/home/sd336/miniforge3/envs/conda_jl38/lib/libpython3.8.so.1.0\"","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"(Re)build IJulia.jl:","category":"page"},{"location":"HOWTOPython/","page":"Configuring for Julia - python interoperability","title":"Configuring for Julia - python interoperability","text":"julia> ENV[\"JUPYTER\"] = \"/home/sd336/miniforge3/envs/conda_jl38/bin/jupyter\" # path from unix> which jupyter\n\"/home/sd336/miniforge3/envs/conda_jl38/bin/jupyter\"\n\npkg> build IJulia","category":"page"},{"location":"ExampleReservoirs/#Reservoirs-and-fluxes","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"These examples illustrate how to code a PALEO Reaction and configure a model, working through a minimal example of first order decay or transformation of a scalar biogeochemical reservoir A into a second reservoir B via a flux F, with equations:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"F = kappa A","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"fracdAdt = - F ","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"fracdBdt =   F ","category":"page"},{"location":"ExampleReservoirs/#Example-1-A-minimal-self-contained-PALEO-reaction","page":"Reservoirs and fluxes","title":"Example 1 A minimal self-contained PALEO reaction","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"This is verbose as we have to (re)implement Variable setup and initialisation as well as the biogeochemical reaction of interest, but illustrates the structure of a PALEO model.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The code to implement a self-contained PALEO reaction is in file examples/reservoirs/reactions_ex1.jl, and needs to provide three methods for Variable setup, initialization at the start of the main loop, as well as the actual main loop do method. Variables are labelled as state Variables and derivatives by setting the :vfunction attribute to VF_StateExplicit and VF_Deriv.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/reactions_ex1.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The model configuration (file examples/reservoirs/config_ex1.yaml) contains just a single Reaction:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/config_ex1.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The script to run the model (file examples/reservoirs/run_ex1.yaml) contains:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/run_ex1.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"And produces output:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"include(\"../../examples/reservoirs/run_ex1.jl\") # hide\nplot(run.output, \"global.A\") # hide\nsavefig(\"ex1_plot1.svg\")  # hide\nplot(run.output, \"global.decay_flux\")  # hide\nsavefig(\"ex1_plot2.svg\"); nothing # hide","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"(Image: ) (Image: )","category":"page"},{"location":"ExampleReservoirs/#Example-2-Using-a-PALEO-Reservoir","page":"Reservoirs and fluxes","title":"Example 2 Using a PALEO Reservoir","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The standard way to configure PALEO models is to use a combination of ReactionReservoirs (from the Reaction catalog provided by the PALEOboxes package) to define model state Variables and provide setup and initialisation, and then link to these Variables from other Reactions.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"In this example, the Reaction code now only needs to implement a 'do' method (file examples/reservoirs/reactions_ex2.jl):","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/reactions_ex2.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The model configuration (file examples/reservoirs/config_ex2.yaml) contains a ReactionReservoirScalar from the generic Reaction catalog provided by the PALEOboxes package:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/config_ex2.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The script to run the model (file examples/reservoirs/run_ex2.jl) contains:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/run_ex2.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"and produces output:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"include(\"../../examples/reservoirs/run_ex2.jl\") # hide\nplot(run.output, \"global.A\") # hide\nsavefig(\"ex2_plot1.svg\")  # hide\nplot(run.output, \"global.decay_flux\")  # hide\nsavefig(\"ex2_plot2.svg\"); nothing # hide","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"(Image: ) (Image: )","category":"page"},{"location":"ExampleReservoirs/#Example-3-Transfer-between-two-Reservoirs","page":"Reservoirs and fluxes","title":"Example 3 Transfer between two Reservoirs","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"Generalizing the Reaction to transfer between two reservoirs.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The Reaction code (file examples/reservoirs/reactions_ex3.jl) now produces an output_flux, and has been generalized to operate on a generic input_particle Reservoir:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/reactions_ex3.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The model configuration (file examples/reservoirs/config_ex3.yaml) contains two Reservoirs A and B, and additional configuration for ReactionExample3 to rename the generic input_particle to link to Reservoir A and output_flux to link to Reservoir B:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/config_ex3.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The script to run the model (file examples/reservoirs/run_ex3.jl) contains:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/run_ex3.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"and produces output showing the transfer between two Reservoirs:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"include(\"../../examples/reservoirs/run_ex3.jl\") # hide\nplot(run.output, [\"global.A\", \"global.B\"]; ylabel=\"reservoir (mol)\") # hide\nsavefig(\"ex3_plot1.svg\")  # hide\nplot(run.output, \"global.decay_flux\")  # hide\nsavefig(\"ex3_plot2.svg\"); nothing # hide","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"(Image: ) (Image: )","category":"page"},{"location":"ExampleReservoirs/#Example-4-Transfer-between-Domains","page":"Reservoirs and fluxes","title":"Example 4 Transfer between Domains","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The ReactionExample3 from the previous example can be reused in a different model configuration that includes flux transfer between Reservoirs in two Domains. ","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The model configuration (file examples/reservoirs/config_ex4.yaml) contains two Domains Box1 and Box2, and a flux coupler Domain fluxBoxes.  The ReactionSum in the global Domain tracks conservation:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/config_ex4.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The script to run the model (file examples/reservoirs/run_ex4.jl) contains:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/run_ex4.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"and produces output showing the transfer between two Reservoirs in different Domains via the fluxBoxes flux coupler:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"include(\"../../examples/reservoirs/run_ex4.jl\") # hide\nplot(run.output,  [\"Box1.A\", \"Box2.B\", \"global.E_total\"]; ylabel=\"reservoir (mol)\") # hide\nsavefig(\"ex4_plot1.svg\")  # hide\nplot(run.output, [\"Box1.decay_flux\", \"fluxBoxes.flux_B\"]; ylabel=\"flux (mol yr-1)\")  # hide\nsavefig(\"ex4_plot2.svg\"); nothing # hide","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"(Image: ) (Image: )","category":"page"},{"location":"ExampleReservoirs/#Example-5-Isotopes-and-Rayleigh-fractionation","page":"Reservoirs and fluxes","title":"Example 5 Isotopes and Rayleigh fractionation","text":"","category":"section"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"PALEO Variables can represent isotopes by setting the :field_data Attribute. Currently IsotopeLinear is supported, which represents a linearized approximation to a single isotope using two components total and total x delta.  Standard arithmetic (additon/subtraction, multiplication by a scalar) is supported.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The Reaction code (file examples/reservoirs/reactions_ex5.jl) now requires additional Parameters field_data to set the data type, and Delta to set the fractionation assumed to occur during the decay/transfer. ","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/reactions_ex5.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The model configuration (file examples/reservoirs/config_ex5.yaml) contains a global parameter EIsotope used to set the isotope Type for all Reactions affecting the hypothetical element E.","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/config_ex5.yaml\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"The script to run the model (file examples/reservoirs/run_ex5.jl) contains:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"str = read(\"../../examples/reservoirs/run_ex5.jl\", String)\nstr = \"\"\"```julia\n      $str\n      ```\"\"\"\nimport Markdown\nMarkdown.parse(str)","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"and produces output showing Rayleigh fractionation:","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"include(\"../../examples/reservoirs/run_ex5.jl\") # hide\nplot(run.output,  [\"Box1.A\", \"Box2.B\", \"global.E_total\"]; ylabel=\"reservoir (mol)\") # hide\nsavefig(\"ex5_plot1.svg\")  # hide\nplot(run.output, [\"Box1.decay_flux\", \"fluxBoxes.flux_B\"]; ylabel=\"flux (mol yr-1)\")  # hide\nsavefig(\"ex5_plot2.svg\"); nothing # hide\nplot(run.output, [\"Box1.A_delta\", \"Box1.decay_flux.v_delta\", \"Box2.B_delta\", \"global.E_total.v_delta\", ]; ylabel=\"delta (per mil)\") # hide\nsavefig(\"ex5_plot3.svg\"); nothing # hide","category":"page"},{"location":"ExampleReservoirs/","page":"Reservoirs and fluxes","title":"Reservoirs and fluxes","text":"(Image: ) (Image: ) (Image: )","category":"page"},{"location":"#PALEOtutorials.jl-documentation","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"","category":"section"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Introduction and tutorials for the PALEO framework.  This repository includes minimal examples and small models that demonstrate Julia workflows and how to use the framework to construct and use models. ","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"For furher information, see the documentation for other  PALEO components:","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"PALEOboxes documentation, the PALEO framework model coupler.\nPALEOmodel documentation solvers for standalone models.\nPALEOcopse documentation an example of a larger model configuration.","category":"page"},{"location":"#Installation","page":"PALEOtutorials.jl documentation","title":"Installation","text":"","category":"section"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Quickstart assuming a working Julia installation (version 1.6 or later):","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Clone this github repository to local directory PALEOtutorials: from a linux bash prompt or a Windows terminal,","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"$ git clone https://github.com/PALEOtoolkit/PALEOtutorials.jl PALEOtutorials","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Start julia and navigate to the PALEOtutorials/examples folder, and run:","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"julia> import Pkg; Pkg.activate(\".\"); Pkg.instantiate()   # download Julia packages","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"For details of Julia installation and setup, see the Documentation","category":"page"},{"location":"#Running-the-examples","page":"PALEOtutorials.jl documentation","title":"Running the examples","text":"","category":"section"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Start julia and navigate to the PALEOtutorials/examples folder, and run:","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"julia> import Pkg; Pkg.activate(\".\")   # activate the Julia environment","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"Individual examples can then be run by eg","category":"page"},{"location":"","page":"PALEOtutorials.jl documentation","title":"PALEOtutorials.jl documentation","text":"julia> cd(\"CPU\")  # PALEOtutorials/examples/CPU\njulia> include(\"CPU_examples.jl\")  # run CPU model example","category":"page"}]
}
